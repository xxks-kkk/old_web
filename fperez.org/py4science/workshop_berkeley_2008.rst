==========================================
 A hands-on 2-day workshop at UC Berkeley
==========================================


UPDATES
=======

* The workshop is now over, but most of the lectures were videotaped and can be
  found `here
  <http://www.archive.org/search.php?query=Fernando+Perez+scientific+python>`_ 

* As of Sept 25, the course is full and we already have a wait list.  But if
  you are interested, you can still `email me <Fernando.Perez@berkeley.edu>`_
  and I'll put you on thee wait list in case we have cancellations.


Introduction
============

We will be holding an introductory workshop covering the use of the Python
programming language for scientific computing on campus, on October 9 and
October 16, 2008.

The workshop is targeted at the level of a graduate student in engineering or
the sciences.  A working knowledge of basic programming is assumed, as well as
familiarity with calculus, basic linear algebra, FFTs, and other similar
topics.

We will briefly review the core language and will cover a number of basic
exercises involving numerics, using the core libraries for scientific
manipulation in Python (`Numpy <http://numpy.scipy.org>`_ and `Scipy
<http://www.scipy.org>`_), plotting with `Matploblib
<http://matplotlib.sourceforge.net>`_, analyzing data files, etc.  The workshop
is very interactive, consisting mostly of hands-on exercises to be completed by
the students, interleaved with 'type-along' sessions where we'll demonstrate
ideas by typing them out while you follow along on your own computer.

The course will not go into advanced aspects of Python; we will review the
basics, but will assume that you have worked through the introductory resources
available online (see below).


Logistics
=========

The workshop will take place October 9 and 16 2008, 9am-5pm at Tolman 5101.  We
only have room for about 20 people total, so `email me
<Fernando.Perez@berkeley.edu>`_ if you are interested in attending so we can
reserve a slot for you (first come, first served).  Please include your full
name, department, affiliation (student, postdoc, faculty, staff...) as well as
a short note on your programming background and research interest regarding the
workshop, so we can know the audience a bit better.

There is a $10 charge for each person to cover the cost of having coffee,
bagels and snacks available in the room, so we can take coffee breaks without
everyone having to leave the building.  Lunch both days will be on your own.

We'll have work tables and power strips available, but *no computers*.  The
point of the workshop is for you to work on your laptop, so that after this you
have all the tools locally installed to continue working.  You must also ensure
that you can connect to the AirBears network, so you can have access to various
files and data online.


Software prerequisites
======================

Before the workshop, we strongly encourage you to install the necessary tools
on your laptop.  We'll do an install check on the first day in the morning, but
it will be much better if you do the installation in advance.

For Mac OSX and Windows users, the easiest (by far) route is to install the
`Enthought Python Distribution`_, which provides a self-contained installer
with all the tools we'll need.

.. _Enthought Python Distribution: http://www.enthought.com/products/epd.php

Linux users need to get the following packages, either by using their
distribution's package manager or by installing from source: nose, setuptools,
ipython, numpy, scipy, matplotlib.


Tests
-----

Once you've installed the code above, please download (save to your disk) `this
file <workshop_checklist.py>`_ and execute it as per the instructions contained
in it (at the top).  It runs a set of sanity checks on your system to ensure
that things are reasonably well installed (it does not do exhaustive testing
however).


Documentation and reading prerequistes
======================================

For the workshop, you should at the very least *work through* (not just read,
but actually type in and execute) the basic `Python tutorial
<http://docs.python.org/tutorial>`_, as well as the `introductory NumPy
tutorial <http://mentat.za.net/numpy/intro/intro.html>`_.

Note: in all of these, the markers that you see as ``>>>`` are the prompts
generated by Python which you do not type.  Similarly, the `IPython`_ prompts
look like ``In [3]:``.

.. _IPython: http://ipython.scipy.org

In addition to these two minimal requirements, the following links can also be
useful as reference:

- `Interactive data analysis
  <http://www.scipy.org/wikis/topical_software/Tutorial>`_: a tutorial with an
  astronomy focus but very useful for anyone dealing with data.  This is an
  *excellent resource*.

- The `NumPy reference guide <http://docs.scipy.org/doc/numpy/reference>`_:
  though still a draft, it contains much useful information.

- The `Matplotlib manual <http://matplotlib.sourceforge.net/contents.html>`_:
  this is the matlab-like plotting library we'll be using throughout.

- The `IPython manual <http://ipython.scipy.org/doc/rel-0.9.1/html>`_: the
  interactive environment you'll be working in.

- The `SciPy documentation page
  <http://www.scipy.org/Additional_Documentation>`_ contains links to many more
  documentation resources, especially for scientific work.
  
Finally, fhe following Python books are freely available to UC Berkeley via the
O'Reilly Safari system.  These are books I have personally found to be useful
and can recommend, there's obviously a lot more out there; all of them cover
the language in general, without science-specific content.

- `Learning Python, 3rd Edition
  <http://proquest.safaribooksonline.com/9780596513986>`_ by Mark Lutz.

- `Python Pocket Reference, 2nd Edition
  <http://proquest.safaribooksonline.com/0596001894>`_ by Mark Lutz.

- `Python in a Nutshell, 2nd Edition
  <http://proquest.safaribooksonline.com/0596100469>`_ by Alex Martelli.

- `Python Cookbook, 2nd Edition
  <http://proquest.safaribooksonline.com/0596007973>`_ by Alex Martelli; Anna
  Martelli Ravenscroft; David Ascher.

Note that to access Safari, you need to be either on campus or browsing with
the `Berkeley Library Proxy <http://lib.berkeley.edu/Help/proxy.html>`_.


Contact information
===================

To register or if you have any personal question regarding the workshop, you
can `email me <Fernando.Perez@berkeley.edu>`_.  But for general questions,
installation issues, etc, I encourage you to use the `Py4science mailing list
<https://calmail.berkeley.edu/manage/list/listinfo/py4science@lists.berkeley.edu>`_,
so that the answer to your question can benefit others as well who may
encounter similar problems.  You are also welcome to stop by any of the regular
`Py4Science meetings on campus <https://cirl.berkeley.edu/view/Py4Science>`_.
